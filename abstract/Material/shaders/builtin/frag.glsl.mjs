export default "/* start builtins */\nprecision mediump float;\n\n#extension GL_OES_standard_derivatives : enable\n\n#ifdef USES_TEXTURES\nvarying vec2 v_uv;\n#endif\n\n// mesh uniforms\n#ifdef USES_COLOR_MAP\nuniform sampler2D COLOR_MAP;\n#endif\n\n#ifdef USES_SPEC_MAP\nuniform sampler2D SPEC_MAP;\n#endif\n\n#ifdef USES_BUMP_MAP\nuniform sampler2D BUMP_MAP;\n// uniform float BUMP_SCALE;\n\n// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n// http://api.unrealengine.com/attachments/Engine/Rendering/LightingAndShadows/BumpMappingWithoutTangentSpace/mm_sfgrad_bump.pdf\n\n// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\nvec2 dHdxy_fwd() {\n\tvec2 dSTdx = dFdx(v_uv);\n\tvec2 dSTdy = dFdy(v_uv);\n\n\tfloat BUMP_SCALE = 1.0; // TODO parameterise\n\tfloat Hll = BUMP_SCALE * texture2D(BUMP_MAP, v_uv).x;\n\tfloat dBx = BUMP_SCALE * texture2D(BUMP_MAP, v_uv + dSTdx).x - Hll;\n\tfloat dBy = BUMP_SCALE * texture2D(BUMP_MAP, v_uv + dSTdy).x - Hll;\n\n\treturn vec2(dBx, dBy);\n}\n\nvec3 perturbNormalArb(vec3 surf_pos, vec3 surf_norm, vec2 dHdxy) {\n\t// Workaround for Adreno 3XX dFd*(vec3) bug. See https://github.com/mrdoob/three.js/issues/9988\n\tvec3 vSigmaX = vec3(dFdx(surf_pos.x), dFdx(surf_pos.y), dFdx(surf_pos.z));\n\tvec3 vSigmaY = vec3(dFdy(surf_pos.x), dFdy(surf_pos.y), dFdy(surf_pos.z));\n\tvec3 vN = surf_norm;\t\t// normalized\n\n\tvec3 R1 = cross(vSigmaY, vN);\n\tvec3 R2 = cross(vN, vSigmaX);\n\n\tfloat fDet = dot(vSigmaX, R1);\n\n\tfDet *= (float(gl_FrontFacing) * 2.0 - 1.0);\n\n\tvec3 vGrad = sign(fDet) * (dHdxy.x * R1 + dHdxy.y * R2);\n\treturn normalize(abs(fDet) * surf_norm - vGrad);\n}\n#endif\n\nuniform vec3 COLOR;\n\n#ifdef USES_ALPHA\nuniform float ALPHA;\n#endif\n\n// lights\nuniform vec3 AMBIENT_LIGHT;\n\nstruct DirectionalLight {\n\tvec3 direction;\n\tvec3 color;\n\tfloat intensity;\n};\n\nuniform DirectionalLight DIRECTIONAL_LIGHTS[NUM_LIGHTS];\n\nstruct PointLight {\n\tvec3 location;\n\tvec3 color;\n\tfloat intensity;\n\t// TODO fall-off etc\n};\n\nuniform PointLight POINT_LIGHTS[NUM_LIGHTS];\n/* end builtins */";