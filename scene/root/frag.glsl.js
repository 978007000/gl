export default "precision mediump float;\n\n// uniform vec3 _reverse_light_direction;\n// uniform vec3 light_direction;\nuniform vec4 light_color;\n\nuniform vec3 _ambient_light;\nuniform vec3 _directional_lights_direction[8];\nuniform vec4 _directional_lights_color[8];\n\nuniform vec4 _color;\n\nvarying vec3 vnormal;\n\nvoid main () {\n\tvec3 normal = normalize(vnormal);\n\n\tvec3 light = vec3(0.0, 0.0, 0.0);\n\n\tfor (int i = 0; i < 8; i += 1) {\n\t\tvec3 direction = _directional_lights_direction[i];\n\t\tvec4 color = _directional_lights_color[i];\n\n\t\tfloat multiplier = clamp(dot(normal, direction), 0.0, 1.0);\n\t\tlight += multiplier * color.rgb * color.a;\n\t}\n\n\t// float light = clamp(dot(normal, _reverse_light_direction), 0.0, 1.0);\n\t// float light = 1.0;\n\n\t// vec3 light_direction = _directional_lights_direction[0];\n\n\t// float light_amount = clamp(dot(normal, light_direction), 0.0, 1.0);\n\t// vec3 light = light_amount * light_color.a * light_color.rgb;\n\n\t// gl_FragColor = vcolor;\n\tgl_FragColor = _color;\n\tgl_FragColor.rgb *= mix(_ambient_light, vec3(1.0, 1.0, 1.0), light);\n\n\t// gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n}";